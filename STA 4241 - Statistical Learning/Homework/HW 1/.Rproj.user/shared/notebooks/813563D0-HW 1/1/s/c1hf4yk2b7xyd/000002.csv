"0",""
"0","# Computing Bayes error rate for each specific observation, then computing average error rates for train and test sets"
"0",""
"0","# Functions for computing posterior probability and Bayes error rate per observation "
"0","known_posterior <- function(x1, x2) pnorm(q = 0.5*x1 - 0.4*x2)"
"0",""
"0","max_class_prob <- function(x1, x2) {"
"0","  label_1_posterior <- known_posterior(x1 = x1, x2 = x2)"
"0","  max(label_1_posterior, 1 - label_1_posterior)"
"0","}"
"0",""
"0","bayes_error_rate <- function(x1, x2) {"
"0","  1 - max_class_prob(x1 = x1, x2 = x2)"
"0","}"
"0",""
"0","overall_bayes_error_rate <- function(vec1, vec2) {"
"0","  expected_posterior <- mapply(FUN = max_class_prob, vec1, vec2)"
"0","  1 - mean(x = expected_posterior)"
"0","}"
"0",""
"0","# Overall bayes error rate for a classifier, computed from a confusion matrix"
"0","overall_ber_clf <- function(clf, X, y, echo = TRUE) {"
"0","  # Predicted labels"
"0","  predictions <- predict(object = clf, X)"
"0","  if (echo) cat('\nPredicted labels:\n', head(x = predictions))"
"0","  "
"0","  # Confusion matrices "
"0","  confusion_matrix <- confusionMatrix(data = predictions, y)"
"0","  if (echo) {"
"0","    print('\nConfusion matrix:\n')"
"0","    print(confusion_matrix)"
"0","  }"
"0","  "
"0","  # Accuracy"
"0","  accuracy <- confusion_matrix$overall[1]"
"0","  if (echo) cat('\nAccuracy:\n', accuracy)"
"0",""
"0","  # Overall Bayes error rate  "
"0","  overall_ber <- 1 - as.double(x = accuracy)"
"0","  if (echo) cat('\nOverall Bayes error rate:\n', overall_ber)"
"0","  overall_ber"
"0","}"
"0",""
